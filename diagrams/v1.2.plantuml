@startuml v1.2

skin rose

package Modules {
  abstract class Module {
    -Decision op
    {abstract} +JSONObject getJSON()
    +String getOp()
  }
  class Radar
  class Turner
  class Flyer
  class Scanner
  enum Decision
  
  Module <|-- Radar
  Module <|-- Turner
  Module <|-- Flyer
  Module <|-- Scanner
  Module --> Decision
}

package Record {
  interface MapUpdater {
    {abstract} +void updateFly()
    {abstract} +void updateHeading(Heading new_heading)
    {abstract} +void updateScan(TileType new_type)
  }
  class RelativeMap {
    -Map<Point, TileType> relative_map
    -Point current_pos
    -Heading current_heading
    +Point getCurrentPos()
    +TileType getTileType(Point point_query)
    +Heading getCurrentHeading()
  }
    struct Point {
    +int x
    +int y
  }
  class AttributeRecord {
    -Map<String, Integer> attributes
    +void updateAttributes(int battery, int distG, int distB)
    +Map<String, Integer> getAttributes()
  }
  class MovesRecord {
    -List<Decision> prev_moves
    +void addPrevMoves(Decision dec_to_add)
    +boolean movesIsEmpty()
    +Decision getLastMove()
  }

  enum Heading
  enum TileType
  
  MapUpdater <|.. RelativeMap
  MapUpdater --> Heading
  MapUpdater --> TileType
  RelativeMap --> Point
  MovesRecord --> Decision
}

class Explorer
class Runner

Explorer o-- Module
Explorer o-- MapUpdater
Explorer o-- AttributeRecord
Explorer o-- MovesRecord
Runner *-- Explorer

@enduml